{
  "parent": "exploitation-data",
  "slug": "exploitation-data-jupyter",
  "bodyContent": "# Jupyter\n\nШикарный инструмент для анализа данных и машинного обучения, о нем можно рассказывать бесконечно. Установлен в составе сборки аналитического пакета Anaconda, уже есть все необходимое для работы с данными.\n\n?> **Доступ в Jupyter** По адресу http://172.16.25.1:8888 после [подключения к VPN](connect-vpn)\n\n## Блокноты\n\n* [Notebook 1. Миграция на 2.0](/../ipbooks/move_to_new_tables.html ':ignore')\n* [Notebook 2. Интеграция с crm]/(/../ipbooks/crm_integration.html ':ignore')\n\n## Подключение к БД\n\n![](/static/media/jupyter/main.png)\n\n\nПодключение к базе данных\n\n```python\nimport json\nfrom simpleclickhouse.clickhose import ClickHouse\nch = ClickHouse('172.16.25.1', db='alco')\n```\n\nЧтение данных стримом\n\n```python\n# период\ndt = date.today()\ndf = dt - timedelta(days=30)\n\nquery = '''\nSELECT *\nFROM events\nWHERE date > '{df}' and date <= '{dt}'\nLIMIT 100\nFORMAT JSONEachRow\n'''.format(df=df.strftime('%Y-%m-%d'), dt=dt.strftime('%Y-%m-%d'))\n\nres = ch.select_stream(query)\n\nfor line in res.iter_lines():\n    if line:\n        decoded_line = line.decode('utf-8')\n        row = json.loads(decoded_line)\n        print(row)\n\n```\n\nЗапись данных\n\n```python\nfor i in range(1, 1000):\n\tself.storage.push('temp_tamble', {'num': i})\n\nself.storage.flush('temp_tamble')\n```\n\nКоннектор автоматически сбрасывает данные в ClickHouse через каждые 50000 строк. В конце обработки необходимо вручную отправить остаток.",
  "bodyHtml": "<h1>Jupyter</h1>\n<p>Шикарный инструмент для анализа данных и машинного обучения, о нем можно рассказывать бесконечно. Установлен в составе сборки аналитического пакета Anaconda, уже есть все необходимое для работы с данными.</p>\n<p>?&gt; <strong>Доступ в Jupyter</strong> По адресу http://172.16.25.1:8888 после <a href=\"connect-vpn\">подключения к VPN</a></p>\n<h2>Блокноты</h2>\n<ul>\n<li><a href=\"/../ipbooks/move_to_new_tables.html\" title=\":ignore\">Notebook 1. Миграция на 2.0</a></li>\n<li>[Notebook 2. Интеграция с crm]/(/../ipbooks/crm_integration.html ':ignore')</li>\n</ul>\n<h2>Подключение к БД</h2>\n<p><img src=\"/static/media/jupyter/main.png\" alt=\"\"></p>\n<p>Подключение к базе данных</p>\n<pre><code class=\"hljs\"><span class=\"hljs-keyword\">import</span> json\n<span class=\"hljs-keyword\">from</span> simpleclickhouse.clickhose <span class=\"hljs-keyword\">import</span> ClickHouse\nch = ClickHouse(<span class=\"hljs-string\">'172.16.25.1'</span>, db=<span class=\"hljs-string\">'alco'</span>)</code></pre><p>Чтение данных стримом</p>\n<pre><code class=\"hljs\"><span class=\"hljs-comment\"># период</span>\ndt = date.today()\ndf = dt - timedelta(days=<span class=\"hljs-number\">30</span>)\n\nquery = <span class=\"hljs-string\">'''\nSELECT *\nFROM events\nWHERE date &gt; '{df}' and date &lt;= '{dt}'\nLIMIT 100\nFORMAT JSONEachRow\n'''</span>.format(df=df.strftime(<span class=\"hljs-string\">'%Y-%m-%d'</span>), dt=dt.strftime(<span class=\"hljs-string\">'%Y-%m-%d'</span>))\n\nres = ch.select_stream(query)\n\n<span class=\"hljs-keyword\">for</span> line <span class=\"hljs-keyword\">in</span> res.iter_lines():\n    <span class=\"hljs-keyword\">if</span> line:\n        decoded_line = line.decode(<span class=\"hljs-string\">'utf-8'</span>)\n        row = json.loads(decoded_line)\n        print(row)</code></pre><p>Запись данных</p>\n<pre><code class=\"hljs\"><span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> range(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1000</span>):\n\tself.storage.push(<span class=\"hljs-string\">'temp_tamble'</span>, {<span class=\"hljs-string\">'num'</span>: i})\n\nself.storage.flush(<span class=\"hljs-string\">'temp_tamble'</span>)</code></pre><p>Коннектор автоматически сбрасывает данные в ClickHouse через каждые 50000 строк. В конце обработки необходимо вручную отправить остаток.</p>\n",
  "preview": "Jupyter\n\nШикарный инструмент для анализа данных и машинного обучения, о нем можно рассказывать бесконечно.",
  "title": "Jupyter",
  "dir": "content/docs/data",
  "base": "data-tools-jupyter.json",
  "ext": ".json",
  "sourceBase": "data-tools-jupyter.md",
  "sourceExt": ".md"
}